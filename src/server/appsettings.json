{
  "Logging": {

    // System logger settings. Note the LogLevel set for each category is the minimum log level that
    // will be logged. The order of log levels is:
    //   Trace = 0, Debug = 1, Information = 2, Warning = 3, Error = 4, Critical = 5, and None = 6.
    "LogLevel": {
      "Default": "Trace",
      "Microsoft": "Error",
      "System": "Error"
    },

    // Settings for our server-specific logger
    "AIServer": {
      "LoggingDir": "logs",               // Directory where logs are stored, relative to root
      "FileTemplate": "log-%Y-%m-%d.txt", // Template for daily logging file
      "MaxLogsToStoreMB": 20,             // Maximum amount of logs to store in MB. Once this is hit old log files get dumped (not trimmed, dumped)
      "LogLevels": {
        "Debug": "Yellow",
        "Trace": "Gray",
        "Information": "White",
        "Warning": "Cyan",
        "Error": "Red",
        "Critical": "Magenta"
      }
    }
  },

  // Kestrel
  "AllowedHosts": "*",
  "ForceHttps": false,

  // Request queue settings.
  "QueueProcessingOptions": {
    "ResponseTimeout": "00:00:30",
    "CommandDequeueTimeout": "00:00:10",
    "MaxQueueLength": 1024
  },

  "MeshOptions": {
    "Enable": false,
    "EnableStatusBroadcast": true,
    "EnableStatusMonitoring": true,
    "AcceptForwardedRequests": true,
    "AllowRequestForwarding": true,

    "KnownMeshHostnames": [ ]
  },

  "ServerOptions": {

    // Allow the server to make calls to check for updates or get downloadable module lists.
    "AllowInternetAccess": true,

    // Whether or not to disable port 5000 (5500 on mac) so it's free for something else
    "DisableLegacyPort": false,
  
    // Whether or not to disable IPv6 support.
    "DisableIPv6": false,

    // URLs and Endpoints on GitHub.io
    "ServerVersionCheckUrl": "https://codeproject.github.io/codeproject.ai/config/version.json",
    "ServerDownloadUrl":     "https://codeproject.github.io/codeproject.ai/latest.html",  // Link to download latest server

    // These key/values are added to the set of environment variables when the backend analysis
    // modules are launched.
    "EnvironmentVariables": {
      "CPAI_PORT": 32168, // Port for API client to use
      "CPAI_APPROOTPATH": "%ROOT_PATH%" // Root path of server application
    }
  },

  "ModuleOptions": {

    // Will we be launching the backend analysis modules when the server starts? (handy to disable
    // for debugging the modules separately)
    "LaunchModules": true,

    // The delay between starting the server and starting the background modules in seconds. Ensures
    // the server is fully running before we attempt to launch the backend modules.
    "DelayBeforeLaunchingModulesSecs": 3,

    // The delay between stopping the background services and passing control back to the server so
    // it can stop. Ensures modules have time to stop properly.
    "DelayAfterStoppingModulesSecs": 3,

    // This needs to be set to allow module uploads and installs via the API
    "InstallPassword": null,

    // The time allowed for a module to be installed. 20 mins should be plenty, but for a Raspberry
    // or Orange Pi, or slow internet, it will need longer.
    "ModuleInstallTimeout": "00:20:00",

    // URLs on Bunny.net
    // "ModuleListUrl":   "https://codeproject-ai-bunny.b-cdn.net/modules/modules.json",
    // "ModelListUrl":    "https://codeproject-ai-bunny.b-cdn.net/models/models.json",
    "AssetStorageUrl": "https://codeproject-ai-bunny.b-cdn.net/server/assets/",
    "ModuleStorageUrl": "https://codeproject-ai-bunny.b-cdn.net/modules/",

    // URLs on github.io
    // "AssetStorageUrl": "https://codeproject.github.io/codeproject.ai/assets/",
    "ModuleListUrl":   "https://codeproject.github.io/codeproject.ai/config/modules.json",
    "ModelListUrl":    "https://codeproject.github.io/codeproject.ai/config/modules.json",
    // "ModuleStorageUrl": "https://codeproject.github.io/codeproject.ai/modules/",

    // The location of the AI modules (pre-installed and downloaded/side-loaded)
    "ModuleInstallerScriptsDirPath":   "%ROOT_PATH%",                      // Where the installer scripts (setup.bat/.sh) live
    "RuntimesDirPath":                 "%ROOT_PATH%/runtimes",             // ** %RUNTIMES_PATH% will expand to this value

    // Modules can run from 4 places: src/modules by default. /app/preinstalled-modules for pre-
    // installed modules in docker. /src/demos/modules for demo modules in dev code, and finally, an
    // external folder for modules in standalone projects / Git repos.
    "ModulesDirPath":                  "%ROOT_PATH%/modules",                    // ** %MODULES_PATH% will expand to this value
    "PreInstalledModulesDirPath":      "%ROOT_PATH%/preinstalled-modules",       // ** %PREINSTALLED_MODULES_PATH% will expand to this value
    "DemoModulesDirPath":              "%ROOT_PATH%/src/demos/modules",          // ** %DEMO_MODULES_PATH% will expand to this value
    "ExternalModulesDirPath":          "%ROOT_PATH%/../CodeProject.AI-Modules",  // ** %EXTERNAL_MODULES_PATH% will expand to this value
    
    // Downloads for modules and models go here
    "DownloadedModulePackagesDirPath": "%ROOT_PATH%/downloads/modules/packages", // Where module packages are downloaded to
    "DownloadedModelsPackagesDirPath": "%ROOT_PATH%/downloads/models",           // Where models are downloaded to

    // The template location of the Python interpreter for use when the Runtime for a module is
    // set as 'Python'. In Development mode, the Python folder will go under an OS specific
    // folder. This allows the same python modules to run under Windows and Linux in the same repo
    // (Handy if you run Windows and WSL against the same code). %PYTHON_NAME% will be replaced
    // with a value based on the module's Python version (eg Python3.9 will mean PYTHON_NAME is
    // replaced with python39).
    // TODO: Have 'runtime' plugins register runtimes and their launcher's paths to remove the need
    //       for this hardcoding.

    "PythonRelativeInterpreterPath": "/bin/%OS_NAME%/%PYTHON_NAME%/venv/Scripts/python", // ** %PYTHON_PATH% will expand to this value

    // Whether or not to install the initial set of modules concurrently or one by one.
    "ConcurrentInitialInstalls": false,

    // Whether or not to install the initial set of modules on first run.
    "InstallInitialModules": true,

    // The list of Modules to install on Initial run. The format for the list of initial modules is
    // "moduleid:version; moduleid:version, ...", with the version being optional. If the version is
    // not specified, the latest version will be installed.
    "InitialModules": "FaceProcessing; ObjectDetectionYOLOv5Net; ObjectDetectionYOLOv5-6.2"
  }
}
